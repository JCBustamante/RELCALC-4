# Understanding linearly dependent functions

# Institution(Oklahoma State University)
# Author(Jiri Lebl)

##############################################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "AnswerFormatHelp.pl",
  "PGML.pl",
  "PGcourse.pl"
);

##############################################################

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric");

$xa = random(1,10,1);
$xb = random($xa+1,$xa+10,1);
$xc = random($xb+1,$xb+10,1);
$xd = random($xc+1,$xc+10,1);

do {
	$fa = Real(non_zero_random(-10,10,1));
	$fb = Real(non_zero_random(-10,10,1));
	$fc = Real(non_zero_random(-10,10,1));
	$fd = Real(non_zero_random(-10,10,1));
} while ($fa == $fb or $fa == $fc or $fa == $fd or $fb == $fc or $fb == $fd or $fc == $fd);

do {
	$mult = Real(non_zero_random(-3,3,0.1));
} while ($mult == 1);

$ga = Real($fa*$mult);
$gb = Real($fb*$mult);
$gc = Real($fc*$mult);
$gd = Real($fd*$mult);

##############################################################

BEGIN_PGML
The two functions [:f(x):] and [:g(x):] are linearly dependent.  Fill in the missing values:

[:f([$xa]) = [$fa]:]

[:g([$xa]) = [$ga]:]

[:f([$xb]) = [$fb]:]

[:g([$xb]) = :] [___________]{"$gb"} [@ AnswerFormatHelp("numbers") @]*  

[:f([$xc]) = [$fc]:]

[:g([$xc]) = :] [___________]{"$gc"} [@ AnswerFormatHelp("numbers") @]*  

[:f([$xd]) = [$fd]:]

[:g([$xd]) = :] [___________]{"$gd"} [@ AnswerFormatHelp("numbers") @]*  
END_PGML

##############################################################

BEGIN_PGML_SOLUTION
If [`f`] and [`g`] are linearly dependent,
they are multiples of each other.  That is,
[`g(x) = A f(x)`] for some constant [`A`].
Then

>>[``[$ga] = g([$xa]) = A f([$xa]) = A ([$fa]) .``]<<

So [`A = [$mult].`]
Then we simply compute

>>[``g([$xb]) = A f([$xb]) =  [$mult] ([$fb])``]<<

>>[``g([$xc]) = A f([$xc]) =  [$mult] ([$fc])``]<<

>>[``g([$xd]) = A f([$xd]) =  [$mult] ([$fd])``]<<
END_PGML_SOLUTION

##############################################################


ENDDOCUMENT();
